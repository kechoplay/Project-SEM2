/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Product;

import DatabaseConnection.Connects;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Order.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import sun.security.x509.AttributeNameEnumeration;

/**
 *
 * @author Admin
 */
public class Product extends javax.swing.JFrame {

    ImageIcon icon;
    String imageLocation = "C:\\Users\\Admin\\Desktop\\anh sql";
    String imageName;
    String imagePath;
    String filename;

    Connection con;
    Statement st;
    ResultSet rs;
    
    public static String proid = null;
    ItemProduct item;

    /**
     * Creates new form Product
     */
    Connects cn = new Connects();

    public Product() {
        initComponents();
        this.setTitle("Product");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        con = cn.open();
        try {
            st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
        icon = new ImageIcon("C:\\Users\\Admin\\Desktop\\anh sql\\deffault.png");
        labelHinhanh.setIcon(icon);
        
        LoadGro();
        LoadSup();
        loadTable("SelectAllProduct");
        txtGroupid.setEnabled(false);
        txtSupid.setEnabled(false);
        btnedit.setEnabled(false);
        btndelete.setEnabled(false);
    }

    public void ProcessCrt(boolean b) {
        this.txtProid.setText("");
        this.txtProname.setText("");
        this.txtProprice.setText("");
        this.txtGroupid.setText("");
        this.txtSupid.setText("");
        this.path.setText("");
    }

    public void LoadSup() {
        String sql = "select Sup_Name from Supplier ";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                this.cbSupname.addItem(rs.getString(1));
            }
        } catch (Exception ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void LoadGro() {
        String sql = "select Gro_Name from ProGroups ";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                this.cbProgroupname.addItem(rs.getString(1));
            }
        } catch (Exception ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadTable(String sql) {
        rs = cn.getData(sql);
        Vector cols = new Vector();
        cols.add("ProID");
        cols.add("Product Name");
        cols.add("Image");
        cols.add("Price");
        cols.add("GroID");
        cols.add("Group Name");
        cols.add("SupID");
        cols.add("Supplier Name");
        Vector data = new Vector();
        try {
            while (rs.next()) {
                Vector column = new Vector();
                column.add(rs.getInt(1));
                column.add(rs.getString(2));
                column.add(rs.getString(3));
                column.add(rs.getInt(4));
                column.add(rs.getInt(5));
                column.add(rs.getString(6));
                column.add(rs.getInt(7));
                column.add(rs.getString(8));
                data.add(column);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
        tablepro.setModel(new DefaultTableModel(data, cols));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablepro = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtProname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtProid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        labelHinhanh = new javax.swing.JLabel();
        buttonChange = new javax.swing.JButton();
        path = new javax.swing.JTextField();
        txtProprice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtGroupid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtSupid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnadd = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btnclear = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        cbProgroupname = new javax.swing.JComboBox<>();
        cbSupname = new javax.swing.JComboBox<>();
        txtsearch = new javax.swing.JTextField();
        btnMuahang = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        cbSearch = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablepro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablepro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableproMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablepro);

        jLabel1.setText("Product ID: ");

        jLabel2.setText("Product Name: ");

        jLabel3.setText("Price: ");

        labelHinhanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/none.png"))); // NOI18N

        buttonChange.setText("Change Picture");
        buttonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangeActionPerformed(evt);
            }
        });

        jLabel4.setText("Product group ID:");

        jLabel5.setText("Product group Name:");

        jLabel6.setText("Supplier ID: ");

        jLabel7.setText("Supplier Name: ");

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        cbProgroupname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cbProgroupname.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbProgroupnamePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        cbSupname.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbSupnamePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btnMuahang.setText("Buy");
        btnMuahang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuahangActionPerformed(evt);
            }
        });

        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search All", "Search By Name", "Search By ID" }));
        cbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMuahang)
                        .addGap(57, 57, 57)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addComponent(buttonChange))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(btnadd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btndelete))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnedit, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                                .addGap(62, 62, 62)
                                                .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12))
                                            .addComponent(txtProname)
                                            .addComponent(txtProid)
                                            .addComponent(txtProprice)
                                            .addComponent(txtGroupid)
                                            .addComponent(txtSupid)
                                            .addComponent(cbProgroupname, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbSupname, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(btnexit)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelHinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelHinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonChange))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtProprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGroupid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbProgroupname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSupid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbSupname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnadd)
                    .addComponent(btnedit)
                    .addComponent(btnclear))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndelete)
                    .addComponent(btnexit))
                .addGap(0, 38, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMuahang)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangeActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter loc = new FileNameExtensionFilter("Images", "jpg", "png");
        fc.setFileFilter(loc);
        int i = fc.showOpenDialog(this);
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                BufferedImage bim = ImageIO.read(file);
                ImageIcon icon = new ImageIcon(bim);
                labelHinhanh.setIcon(icon);
            } catch (IOException ex) {
                Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
            }
            imagePath = file.getPath();
            path.setText(imagePath);
        }
    }//GEN-LAST:event_buttonChangeActionPerformed

    private void tableproMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableproMouseClicked
        // TODO add your handling code here:
        this.txtProid.setEnabled(false);
        this.btnedit.setEnabled(true);
        this.btndelete.setEnabled(true);
        this.btnadd.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) tablepro.getModel();
        proid = model.getValueAt(tablepro.getSelectedRow(), 0).toString();
        txtProid.setText(model.getValueAt(tablepro.getSelectedRow(), 0).toString());
        txtProname.setText(model.getValueAt(tablepro.getSelectedRow(), 1).toString());
        path.setText(model.getValueAt(tablepro.getSelectedRow(), 2).toString());
        txtProprice.setText(model.getValueAt(tablepro.getSelectedRow(), 3).toString());
        txtGroupid.setText(model.getValueAt(tablepro.getSelectedRow(), 4).toString());
        cbProgroupname.setSelectedItem(model.getValueAt(tablepro.getSelectedRow(), 5).toString());
        txtSupid.setText(model.getValueAt(tablepro.getSelectedRow(), 6).toString());
        cbSupname.setSelectedItem(model.getValueAt(tablepro.getSelectedRow(), 7).toString());

        String image = null;
        image = (String) model.getValueAt(tablepro.getSelectedRow(), 2);
        try {
            BufferedImage img = ImageIO.read(new File(image));
            ImageIcon icon = new ImageIcon(img);
            labelHinhanh.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableproMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Are you sure to delete ", "Notification", 2) == 0) {
            FunctionProduct.DeletePro(proid);
            loadTable("SelectAllProduct");
            ProcessCrt(true);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        ProcessCrt(true);
        this.txtProid.setEnabled(true);
        this.btnadd.setEnabled(true);
        this.btnedit.setEnabled(false);
        this.btndelete.setEnabled(false);
        icon = new ImageIcon("C:\\Users\\Admin\\Desktop\\anh sql\\deffault.png");
        labelHinhanh.setIcon(icon);
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        if (this.txtProid.getText().length() == 0 && this.txtProname.getText().length() == 0 && this.path.getText().length() == 0
                && this.txtProprice.getText().length() == 0 && this.txtGroupid.getText().length() == 0 && this.txtSupid.getText().length() == 0
                || this.txtProid.getText().length() == 0 || this.txtProname.getText().length() == 0 || this.path.getText().length() == 0
                || this.txtProprice.getText().length() == 0 || this.txtGroupid.getText().length() == 0 || this.txtSupid.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Not null", "Thông báo", 1);
        } else {
            FunctionProduct.InsertPro(this.txtProid.getText(), this.txtProname.getText(), this.path.getText().trim(),
                    this.txtProprice.getText(), this.txtGroupid.getText(), this.txtSupid.getText());
            loadTable("SelectAllProduct");
            ProcessCrt(true);
        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void cbProgroupnamePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbProgroupnamePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String sql = "select * from ProGroups where Gro_Name=?";
        PreparedStatement pst;
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, (String) this.cbProgroupname.getSelectedItem());
            rs = pst.executeQuery();
            while (rs.next()) {
                this.txtGroupid.setText(rs.getString("Gro_ID"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cbProgroupnamePopupMenuWillBecomeInvisible

    private void cbSupnamePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbSupnamePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String sql = "select * from Supplier where Sup_Name=?";
        PreparedStatement pst;
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, (String) this.cbSupname.getSelectedItem());
            rs = pst.executeQuery();
            while (rs.next()) {
                this.txtSupid.setText(rs.getString("Sup_ID"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbSupnamePopupMenuWillBecomeInvisible

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:        
        if (this.txtProid.getText().length() == 0 && this.txtProname.getText().length() == 0 && this.path.getText().length() == 0
                && this.txtProprice.getText().length() == 0 && this.txtGroupid.getText().length() == 0 && this.txtSupid.getText().length() == 0
                || this.txtProid.getText().length() == 0 || this.txtProname.getText().length() == 0 || this.path.getText().length() == 0
                || this.txtProprice.getText().length() == 0 || this.txtGroupid.getText().length() == 0 || this.txtSupid.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Not null", "Thông báo", 1);
        } else {
            FunctionProduct.UpdatePro(proid, this.txtProid.getText(), this.txtProname.getText(), this.path.getText().trim(),
                    this.txtProprice.getText(), this.txtGroupid.getText(), this.txtSupid.getText());
            loadTable("SelectAllProduct");
            ProcessCrt(true);
        }
    }//GEN-LAST:event_btneditActionPerformed

    private void btnMuahangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuahangActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablepro.getModel();
        int currentRecord = tablepro.getSelectedRow();
        if (currentRecord < 0) {
            JOptionPane.showMessageDialog(this, "Pick one");
            return;
        }
        float price = Float.parseFloat(model.getValueAt(currentRecord, 3).toString());
        int proid = Integer.parseInt(model.getValueAt(currentRecord, 0).toString());
        String name=model.getValueAt(currentRecord, 1).toString();
        ItemProduct item = new ItemProduct(proid, price,name);
        Order or = new Order(item);
        or.setVisible(true);
    }//GEN-LAST:event_btnMuahangActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnexitActionPerformed

    private void cbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchActionPerformed
        // TODO add your handling code here:
        String st = txtsearch.getText();
        String sql = null;
        if (cbSearch.getSelectedItem().equals("Search By Name")) {
            sql = "SELECT Pro_ID,Pro_Name,Pro_Photo,Pro_Price,c.Gro_ID,Gro_Name,b.Sup_ID,Sup_Name from [ComputerStore].[dbo].[Product] "
                    + "a join [ComputerStore].[dbo].[Supplier] b on a.Sup_ID=b.Sup_ID join [ComputerStore].[dbo].[ProGroups] c "
                    + "on a.Gro_ID=c.Gro_ID where a.Pro_Name like '%" + st + "%';";
        } else if (cbSearch.getSelectedItem().equals("Search By ID")) {
            sql = "SELECT Pro_ID,Pro_Name,Pro_Photo,Pro_Price,c.Gro_ID,Gro_Name,b.Sup_ID,Sup_Name from [ComputerStore].[dbo].[Product] "
                    + "a join [ComputerStore].[dbo].[Supplier] b on a.Sup_ID=b.Sup_ID join [ComputerStore].[dbo].[ProGroups] c "
                    + "on a.Gro_ID=c.Gro_ID where a.Pro_ID like '%" + st + "%';";
        } else {
            sql = "select Pro_ID,Pro_Name,Pro_Photo,Pro_Price,c.Gro_ID,Gro_Name,b.Sup_ID,Sup_Name from [ComputerStore].[dbo].[Product]"
                    + " a join [ComputerStore].[dbo].[Supplier] b on a.Sup_ID=b.Sup_ID join [ComputerStore].[dbo].[ProGroups] c on a.Gro_ID=c.Gro_ID;";

        }
        loadTable(sql);
    }//GEN-LAST:event_cbSearchActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMuahang;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton buttonChange;
    private javax.swing.JComboBox<String> cbProgroupname;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JComboBox<String> cbSupname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelHinhanh;
    private javax.swing.JTextField path;
    private javax.swing.JTable tablepro;
    private javax.swing.JTextField txtGroupid;
    private javax.swing.JTextField txtProid;
    private javax.swing.JTextField txtProname;
    private javax.swing.JTextField txtProprice;
    private javax.swing.JTextField txtSupid;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
